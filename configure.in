#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.


AC_PREREQ(2.59)
AC_INIT(jumpnbump, 1.50, jcatki@jonatkins.org)
AC_CONFIG_SRCDIR([menu.c])
AC_CONFIG_HEADER([config.h])
AC_CANONICAL_HOST
AC_CANONICAL_TARGET
AM_INIT_AUTOMAKE(jumpnbump, 1.50)

AC_PREFIX_DEFAULT("/usr/local")
#bindir="/usr/local/games"

# Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_RANLIB

# Checks for libraries.
AM_PATH_SDL(1.2.0,
	CFLAGS="$CFLAGS -DUSE_SDL $SDL_CFLAGS"; LIBS="$LIBS $SDL_LIBS",
	AC_MSG_ERROR(SDL-1.2 is not installed))
AC_CHECK_LIB([SDL_mixer], [Mix_OpenAudio],
	LIBS="$LIBS -lSDL_mixer",
	AC_MSG_ERROR(SDL_mixer is not installed!
    Get it from http://www.libsdl.org/projects/SDL_mixer))
AC_CHECK_LIB([SDL_net], [SDLNet_Init],
	CFLAGS="$CFLAGS -DUSE_NET";
		LIBS="$LIBS -lSDL_net";
		USE_NET=yes,
	AC_MSG_WARN(SDL_net not found: disabling net play
    Get it from http://www.libsdl.org/projects/SDL_net);
		USE_NET="not available")
AC_CHECK_LIB([m], [sqrt])

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([fcntl.h limits.h stdlib.h string.h strings.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
dnl AC_HEADER_STDBOOL
dnl AC_C_VOLATILE

# Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_FUNC_STAT
AC_CHECK_FUNCS([atexit memset sqrt strdup strstr strtoul \
				stricmp strnicmp strncasecmp strcasecmp])

AC_ARG_ENABLE(warn,
AC_HELP_STRING([--enable-warn],[Enable compiler warnings @<:@default=on@:>@]),
	enable_warn=$enableval, enable_warn=yes)
if test "x$enable_warn" = xyes; then
	CFLAGS="$CFLAGS -Wall"
fi

AC_ARG_ENABLE(debug,
AC_HELP_STRING([--enable-debug],[Enable debugging @<:@default=off@:>@]),
	enable_debug=$enableval, enable_debug=off)
if test "x$enable_debug" = xyes; then
	CFLAGS="$CFLAGS -g"
fi

AC_ARG_ENABLE(profile,
AC_HELP_STRING([--enable-profile],[Enable profiling @<:@default=off@:>@]),
	enable_profile=$enableval, enable_profile=off)
if test "x$enable_profile" = xyes; then
	if test "x$GCC" = xyes; then
		CFLAGS="$CFLAGS -pg"
	else
		CFLAGS="$CFLAGS -p"
	fi
fi

AC_MSG_CHECKING(if net is enabled)
AC_ARG_ENABLE(net,
AC_HELP_STRING([--enable-net],[Enable net play @<:@default=$USE_NET@:>@]),
	enable_net=$enableval, enable_net=$USE_NET)
if test "x$enable_net" = xyes -a "x$USE_NET" = xyes; then
	CFLAGS="$CFLAGS -O$enable_optimize" # -ffast-math -funroll-loops"
else
	if test "x$USE_NET" = xyes; then
		USE_NET=no
	fi
fi
AC_MSG_RESULT($USE_NET)

AC_ARG_ENABLE(extra-scripts,
AC_HELP_STRING([--enable-extra-scripts],[Enable wrapper scripts installation @<:@default=yes@:>@]),
	enable_extra_scripts=$enableval, enable_extra_scripts=yes)
if test "x$enable_extra_scripts" = xyes; then
	BIN_SCRIPTS="jnbmenu.tcl jumpnbump-kdialog jumpnbump-xdialog jumpnbump.fbcon jumpnbump.svgalib"
fi
AC_SUBST(BIN_SCRIPTS)
	
AC_CONFIG_FILES([Makefile
                 data/Makefile
                 modify/Makefile
                 sdl/Makefile
				 jnbmenu.tcl
				 jumpnbump-kdialog
				 jumpnbump-xdialog])
AC_OUTPUT
